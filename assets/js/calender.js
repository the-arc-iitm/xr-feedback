const MonthNames=["January","February","March","April","May","June","July","August","September","October","November","December"];const DayNames=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];const Events={DATE_SELECTED:"dateSelected",};const ClassNames={BTN:"calendar__btn",BTN_DISABLED:"calendar__btn_disabled",BTN_PREV:"calendar__btn_prev",BTN_NEXT:"calendar__btn_next",HEADER:"calendar__header",MONTH:"calendar__month",ROOT:"calendar",TABLE:"calendar__table",TABLE_BODY:"calendar__table-body",TABLE_CELL:"calendar__table-cell",TABLE_CELL_SELECTED:"calendar__table-cell_selected",TABLE_COL_HEADER:"calendar__table-col-header",TABLE_HEAD:"calendar__table-head",TABLE_ROW:"calendar__table-row",YEAR:"calendar__year",};const Defaults={minDate:new Date(-8640000000000000),maxDate:new Date(8640000000000000),};class Calendar{constructor(root,{minDate,maxDate,selectedDate}){this._root=root;this._minDate=minDate||Defaults.minDate;this._maxDate=maxDate||Defaults.maxDate;this._localize();this._createUi();this.setDate(selectedDate||new Date())}
setDate(date){this._selectedDate=date;this.reset()}
reset(){this._month=this._selectedDate.getMonth();this._year=this._selectedDate.getFullYear();this._updateUi()}
prevMonth(){if(--this._month<0){this._month+=12;this._year--}
this._updateUi()}
nextMonth(){if(++this._month>=12){this._month-=12;this._year++}
this._updateUi()}
_localize(){this._dayNames=DayNames;this._monthNames=MonthNames}
_createUi(){this._root.classList.add(ClassNames.ROOT);const header=document.createElement("div");header.className=ClassNames.HEADER;this._monthElem=document.createElement("span");this._monthElem.className=ClassNames.MONTH;header.appendChild(this._monthElem);header.appendChild(document.createTextNode(" "));this._yearElem=document.createElement("span");this._yearElem.className=ClassNames.YEAR;header.appendChild(this._yearElem);this._prevBtn=document.createElement("button");this._prevBtn.classList.add(ClassNames.BTN,ClassNames.BTN_PREV);this._prevBtn.setAttribute("aria-label","Previous Month");this._prevBtn.addEventListener("click",()=>{this.prevMonth()});header.appendChild(this._prevBtn);this._nextBtn=document.createElement("button");this._nextBtn.classList.add(ClassNames.BTN,ClassNames.BTN_NEXT);this._nextBtn.setAttribute("aria-label","Next Month");this._nextBtn.addEventListener("click",()=>{this.nextMonth()});header.appendChild(this._nextBtn);this._root.appendChild(header);const table=document.createElement("table");table.className=ClassNames.TABLE;const tableHead=document.createElement("thead");tableHead.className=ClassNames.TABLE_HEAD;const tableHeadRow=document.createElement("tr");tableHeadRow.className=ClassNames.TABLE_ROW;for(const day of this._dayNames){const colHeader=document.createElement("th");colHeader.scope="col";colHeader.className=ClassNames.TABLE_COL_HEADER;colHeader.textContent=day;tableHeadRow.appendChild(colHeader)}
tableHead.appendChild(tableHeadRow);table.appendChild(tableHead);this._tableBody=document.createElement("tbody");this._tableBody.className=ClassNames.TABLE_BODY;this._tableBody.addEventListener("click",(event)=>{const target=event.target;if(target.classList.contains(ClassNames.TABLE_CELL)&&target.dataset.date){const event=new CustomEvent(Events.DATE_SELECTED,{detail:{date:new Date(this._year,this._month,target.dataset.date),},});this._root.dispatchEvent(event)}});table.appendChild(this._tableBody);this._root.appendChild(table)}
_updateUi(){this._monthElem.textContent=this._monthNames[this._month];this._yearElem.textContent=this._year;this._tableBody.innerHTML="";const date=new Date(this._year,this._month,1);date.setDate(1-date.getDay());do{const row=document.createElement("tr");for(let i=0;i<7;i++){const cell=document.createElement("td");cell.classList.add(ClassNames.TABLE_CELL);if(date.getMonth()==this._month){cell.textContent=date.getDate();cell.dataset.date=date.getDate();if(date.getTime()===new Date(this._selectedDate.getFullYear(),this._selectedDate.getMonth(),this._selectedDate.getDate()).getTime()){cell.classList.add(ClassNames.TABLE_CELL_SELECTED)}}
row.appendChild(cell);date.setDate(date.getDate()+1)}
this._tableBody.appendChild(row)}while(date.getMonth()==this._month);}}
const calendarElem=document.getElementById("calendar");if(calendarElem!=null){const calendar=new Calendar(calendarElem,{minDate:Defaults.minDate,maxDate:Defaults.maxDate,});calendarElem.addEventListener(Events.DATE_SELECTED,(event)=>{calendar.setDate(event.detail.date)})}